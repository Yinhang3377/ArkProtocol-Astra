name: CI

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rust:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Install OpenSSL on macOS
        if: runner.os == 'macOS'
        run: |
          brew install openssl@3
          echo LDFLAGS=-L/opt/homebrew/opt/openssl@3/lib >> $GITHUB_ENV
          echo CFLAGS=-I/opt/homebrew/opt/openssl@3/include >> $GITHUB_ENV
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
      - name: Cargo fmt
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy -p ark-wallet-cli -- -D warnings
      - name: Cargo fmt (strict check before tests)
        shell: bash
        run: cargo fmt --check --all || exit 1
      - name: Tests
        run: cargo test -p ark-wallet-cli

  msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.85.0
      - uses: Swatinem/rust-cache@v2
      - name: Install OpenSSL on macOS
        if: runner.os == 'macOS'
        run: |
          brew install openssl@3
          echo LDFLAGS=-L/opt/homebrew/opt/openssl@3/lib >> $GITHUB_ENV
          echo CFLAGS=-I/opt/homebrew/opt/openssl@3/include >> $GITHUB_ENV
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
      - run: cargo build -p ark-wallet-cli

  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@stable
      - name: Ensure Cargo.lock exists
        run: |
          if [ ! -f Cargo.lock ]; then
            cargo generate-lockfile
          fi
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}