name: Security scan (cargo-audit + geiger)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  audit:
    name: cargo-audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - name: Install cargo-audit
        run: |
          # Use a recent cargo-audit release
          cargo install cargo-audit --version 0.21.2 || true
      - name: Run cargo audit and save JSON
        run: |
          mkdir -p target/audit
          # Save machine-readable JSON for artifact upload and keep human output in the log
          cargo audit --json > target/audit/audit.json || true
          cargo audit || true
      - name: Upload cargo-audit result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cargo-audit-report
          path: ./target/audit

  geiger:
    name: cargo-geiger
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - name: Install cargo-geiger
        run: |
          # Install the latest cargo-geiger available on crates.io; avoid hard-failing the job if install fails
          set -e
          cargo install cargo-geiger || echo "cargo-geiger install failed; continuing and creating a placeholder if missing"
          # verify installation
          if ! cargo --list | grep -q geiger; then
            echo "cargo-geiger binary not found after install"
          else
            echo "cargo-geiger installed"
          fi
      - name: Run cargo-geiger (conservative quick check)
        run: |
          cargo geiger --manifest-path crates/ark-wallet-cli/Cargo.toml --forbid-only --output geiger-ark-wallet-cli.txt || true
      - name: Upload quick geiger report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: geiger-quick-report
          path: ./geiger-ark-wallet-cli.txt

  geiger-full:
    name: cargo-geiger-full
    runs-on: ubuntu-latest
    needs: geiger
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - name: Install cargo-geiger
        run: |
          # Install latest cargo-geiger (don't pin to a specific version that may not exist)
          set -e
          cargo install cargo-geiger || echo "cargo-geiger install failed; continuing and creating a placeholder if missing"
          if ! cargo --list | grep -q geiger; then
            echo "cargo-geiger binary not found after install"
          else
            echo "cargo-geiger installed"
          fi
      - name: Run full cargo-geiger JSON scan
        run: |
          mkdir -p target/geiger
          # Run cargo-geiger for each non-virtual package manifest and collect per-package JSON outputs.
          set -e
          # Find all Cargo.toml files tracked by git, excluding the workspace top-level Cargo.toml if it is virtual
          manifests=$(git ls-files "**/Cargo.toml" | sed 's#\\\\#/#g' || true)
          # Filter out the root workspace Cargo.toml if present
          manifests_filtered=""
          for m in $manifests; do
            if [ "$m" = "Cargo.toml" ]; then
              # skip top-level virtual manifest
              continue
            fi
            manifests_filtered="$manifests_filtered $m"
          done
          if [ -z "$manifests_filtered" ]; then
            echo "No per-package manifests found; falling back to workspace Cargo.toml"
            manifests_filtered="Cargo.toml"
          fi

          any_generated=0
          for m in $manifests_filtered; do
            pkgdir=$(dirname "$m")
            # sanitize package dir name for filenames
            sanitized=$(echo "$pkgdir" | sed 's#/#_##g' | sed 's#^\._##')
            out_json="target/geiger/${sanitized:-root}-geiger.json"
            out_human="target/geiger/${sanitized:-root}-geiger-human.txt"
            echo "Running cargo-geiger for manifest $m -> $out_json"
            if cargo --list | grep -q geiger; then
              cargo geiger --manifest-path "$m" --all-targets --format json > "$out_json" || true
              cargo geiger --manifest-path "$m" --all-targets > "$out_human" || true
              if [ -s "$out_json" ]; then
                any_generated=1
              fi
            else
              echo "cargo-geiger not available; skipping run for $m"
            fi
          done

          # Merge per-package JSON outputs into a single top-level JSON object if any exist
          if [ $any_generated -eq 1 ]; then
            echo "{" > target/geiger/geiger-full.json
            first=1
            for f in target/geiger/*-geiger.json; do
              if [ -s "$f" ]; then
                pkg=$(basename "$f" | sed 's/-geiger.json$//')
                if [ $first -eq 0 ]; then
                  echo "," >> target/geiger/geiger-full.json
                fi
                first=0
                echo "\"$pkg\":" >> target/geiger/geiger-full.json
                cat "$f" >> target/geiger/geiger-full.json
              fi
            done
            echo "}" >> target/geiger/geiger-full.json
          else
            echo "Warning: no per-package geiger JSON produced; creating placeholder"
            echo '{"error":"cargo-geiger-not-available-or-empty","notes":"See logs for details"}' > target/geiger/geiger-full.json
          fi
      - name: Run extractor and produce concise report
        run: |
          # extractor should write target/geiger/extract_cli.txt; tolerate failures but attempt to create a placeholder
          python3 scripts/extract_geiger_cli.py || true
          if [ ! -s target/geiger/extract_cli.txt ] && [ -s target/geiger/geiger-full.json ]; then
            echo "No extract_cli.txt produced; creating a minimal placeholder referencing geiger-full.json" > target/geiger/extract_cli.txt
          fi
      - name: Upload geiger full artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: geiger-full-artifacts
          path: |
            target/geiger/**
