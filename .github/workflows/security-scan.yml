name: Security scan (cargo-audit + geiger)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  audit:
    name: cargo-audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - name: Install cargo-audit
        run: |
          # Use a recent cargo-audit release
          cargo install cargo-audit --version 0.21.2 || true
      - name: Run cargo audit and save JSON
        run: |
          mkdir -p target/audit
          # Save machine-readable JSON for artifact upload and keep human output in the log
          cargo audit --json > target/audit/audit.json || true
          cargo audit || true
      - name: Upload cargo-audit result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cargo-audit-report
          path: ./target/audit

  geiger:
    name: cargo-geiger
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - name: Install cargo-geiger
        run: |
          cargo install cargo-geiger --version 0.27.0 || true
      - name: Run cargo-geiger (conservative quick check)
        run: |
          cargo geiger --manifest-path crates/ark-wallet-cli/Cargo.toml --forbid-only --output geiger-ark-wallet-cli.txt || true
      - name: Upload quick geiger report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: geiger-quick-report
          path: ./geiger-ark-wallet-cli.txt

  geiger-full:
    name: cargo-geiger-full
    runs-on: ubuntu-latest
    needs: geiger
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - name: Install cargo-geiger
        run: |
          cargo install cargo-geiger --version 0.27.0 || true
      - name: Run full cargo-geiger JSON scan
        run: |
          mkdir -p target/geiger
          # Run a full JSON output of cargo-geiger for the workspace.
          # Retry up to 3 times if the generated JSON is empty (some runners may produce empty output intermittently).
          set -e
          attempts=0
          max_attempts=3
          while [ $attempts -lt $max_attempts ]; do
            attempts=$((attempts+1))
            echo "Running cargo-geiger (attempt $attempts/$max_attempts)"
            cargo geiger --all-targets --format json > target/geiger/geiger-full.json || true
            # Also save a human-readable version
            cargo geiger --all-targets > target/geiger/geiger-human.txt || true
            if [ -s target/geiger/geiger-full.json ]; then
              echo "geiger JSON generated and non-empty"
              break
            fi
            echo "geiger-full.json is empty (attempt $attempts). Retrying in 3s..."
            sleep 3
          done
          if [ ! -s target/geiger/geiger-full.json ]; then
            # Some cargo-geiger versions emit a top-level `geiger.json` rather than the target path.
            if [ -s geiger.json ]; then
              echo "Found top-level geiger.json from this geiger version; copying to target/geiger/geiger-full.json"
              cp geiger.json target/geiger/geiger-full.json
            else
              echo "Warning: geiger-full.json is missing or empty after $max_attempts attempts"
            fi
          fi
      - name: Run extractor and produce concise report
        run: |
          # extractor should write target/geiger/extract_cli.txt; tolerate failures but attempt to create a placeholder
          python3 scripts/extract_geiger_cli.py || true
          if [ ! -s target/geiger/extract_cli.txt ] && [ -s target/geiger/geiger-full.json ]; then
            echo "No extract_cli.txt produced; creating a minimal placeholder referencing geiger-full.json" > target/geiger/extract_cli.txt
          fi
      - name: Upload geiger full artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: geiger-full-artifacts
          path: |
            target/geiger/**
