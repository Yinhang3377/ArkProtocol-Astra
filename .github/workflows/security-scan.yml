name: Security scan (cargo-audit + geiger)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  audit:
    name: cargo-audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain-action@stable
      - name: Install cargo-audit
        run: |
          # Use a recent cargo-audit release
          cargo install cargo-audit --version 0.21.2 || true
      - name: Run cargo audit and save JSON
        run: |
          mkdir -p target/audit
          # Save machine-readable JSON for artifact upload and keep human output in the log
          cargo audit --json > target/audit/audit.json || true
          cargo audit || true
      - name: Upload cargo-audit result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cargo-audit-report
          path: ./target/audit

  geiger:
    name: cargo-geiger
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain-action@stable
      - name: Install cargo-geiger
        run: |
          cargo install cargo-geiger --version 0.27.0 || true
      - name: Run cargo-geiger for ark-wallet-cli (fast, forbid-only)
        run: |
          # Use forbid-only mode to quickly check for `#![forbid(unsafe_code)]` usage in entry sources
          # This avoids parsing all registry dependency sources (which can produce parse warnings/errors)
          cargo geiger --manifest-path crates/ark-wallet-cli/Cargo.toml --forbid-only --output geiger-ark-wallet-cli.txt || true
      - name: Upload geiger report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: geiger-report
          path: ./geiger-ark-wallet-cli.txt
