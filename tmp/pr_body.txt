Draft: Security audit - cargo-audit + cargo-geiger artifacts

Summary
- Added CI scan (cargo-audit + cargo-geiger) and collected artifacts.
- Attached artifacts: target/audit/audit.json (cargo-audit), target/geiger/geiger-full.json, target/geiger/extract_manual.txt

High-level findings
- cargo-audit: no advisories found in the captured audit.json
- cargo-geiger (selected crates): getrandom shows used unsafe (max 36 unsafe exprs across versions). signal-hook-registry, secp256k1, backtrace, bytes, smallvec were not present in local geiger-full.json for this run (MISSING) — fetch full CI artifact or re-run geiger on CI if needed.

Per-crate preliminary recommendations
- getrandom (0.2.16,0.3.3): FOUND used unsafe count=36
  - Action: review upstream changelogs/releases for safety-related fixes; prefer versions that reduce unsafe usage where feasible. Audit call sites in dependency graph that require getrandom; if unacceptable, consider pinning to a reviewed commit or vendor minimal RNG surface.

- signal-hook-registry: MISSING in this artifact
  - Action: fetch CI artifact / re-run geiger; if used, ensure signal handling safety is audited and consider replacing with safer alternatives if needed.

- secp256k1 / backtrace / bytes / smallvec: MISSING
  - Action: fetch full CI artifacts and triage similarly.

Next steps
1) Attach these artifacts to this draft PR for reviewer inspection.
2) Run cargo-geiger across CI with --json to capture all crates and re-run extraction.
3) Triage top unsafe-usage crates, propose conservative mitigations (pin/patch/remove) and open follow-up PRs with minimal changes.

Files included in branch:
- .github/workflows/security-scan.yml (CI scan)
- scripts/parse_geiger_manual.py, scripts/run_parse_geiger.ps1 (helpers)
- target/geiger/geiger-full.json (CI artifact)
- target/geiger/extract_manual.txt (extracted summary)
- target/audit/audit.json (cargo-audit output)

Please review and suggest any additional crates to triage or conservative fixes to apply.
草稿：Geiger 安全审计报告

此 PR 包含：
- `.github/PULL_REQUEST_TEMPLATE/security_audit_geiger.md`（审计模板，包含 top-10 节选及建议）
- `tmp_logs/geiger_top30_aggregated.csv`（聚合的 top-30 unsafe 计数 CSV）
- `tmp_logs/geiger_ark_wallet_cli.txt`（完整 geiger 运行日志，供详查）

请审阅：
- 重点关注 top-3 依赖（sha2、bitcoin_hashes、zerocopy）的审计建议并留言是否需要深入审查或替换依赖。
- 我可以随后将 `cargo audit` 与 `cargo geiger` 加入 CI（草稿 PR 可包含工作流文件）。

若需要我也可以将此 PR 标为 Draft（当前已尝试自动创建）。

---

Automated triage (from target/geiger/extract_manual.txt)

- getrandom (0.2.16, 0.3.3): FOUND used unsafe count=36
  - Impact: moderate — RNG crates often contain unsafe low-level platform code. We should inspect call sites and ensure only well-reviewed APIs are used.
  - Suggestion: prefer newer getrandom releases if they reduce unsafe usage; audit dependent crates that expose RNG to security-sensitive code paths. Consider pinning to a specific vetted version or introducing a safe wrapper with limited surface.

- signal-hook-registry: MISSING from this geiger run
  - Action: re-run geiger (CI) or fetch a non-empty geiger-full.json from CI to confirm presence and versions; then triage unsafe usage.

- secp256k1, backtrace, bytes, smallvec: MISSING
  - Action: same as above — obtain full CI geiger JSON and re-run the extractor. If present, prioritize secp256k1 for manual review (crypto code) and smallvec/bytes for memory-safety usage patterns.

Next actions (automated):
1. Re-run CI security-scan until geiger-full.json is non-empty across runners or run geiger locally in CI runner context.
2. When a full geiger JSON is available, parse and attach top-30 unsafe-usage CSV and a short remediation plan per crate.
3. For any high-risk crates (crypto or native bindings) prepare follow-up PRs with conservative mitigations (pin, patch, replace) and tests.

